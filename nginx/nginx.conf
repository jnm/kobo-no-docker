# From the nginx.conf shipped with the official Docker image
user  nginx;
worker_processes  auto;
events {
    worker_connections  1024;
}
# End copypasta from official image

http {
    # Also from the nginx.conf shipped with the official Docker image
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # End copypasta from official image

    # Kobo stuff from here on out…

    # Custom log format that includes the authenticated user (kobonaut)
    log_format kobo '$remote_addr - $upstream_http_x_kobonaut [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # The upstream Dockerfile symlinks this to /dev/stdout
    access_log /var/log/nginx/access.log kobo;

    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_redirect off;

    # Add ranges support to enable fast calculation for hash of content
    # accessible by URL. See
    # https://github.com/kobotoolbox/kobo-docker/pull/314
    proxy_force_ranges on;

    # Allow 100M upload
    client_max_body_size 100M;

    # Support bigger headers. Useful for huge cookies. See
    # https://github.com/kobotoolbox/kobo-docker/pull/148
    large_client_header_buffers 8 16k;

    # kpi
    server {
        listen 9000;

        location / {
            proxy_pass http://10.6.6.1:9010;
        }

        # public media, e.g. custom logos (KPI `ConfigurationFile`s)
        location /media/__public {
            alias /mnt/kpi/media/__public;
        }

        location /protected/ {
            # Allow internal requests only, i.e. return a 404 to any client who
            # tries to access this location directly
            internal;
            alias /mnt/kobocat/media/;
        }

        #################################################################
        # DUPLICATED VERBATIM ACROSS BOTH KPI AND KOBOCAT SERVER BLOCKS #
        # …because I am too lazy to make a separate file and include it #
        #################################################################
        location ~ ^/protected-s3/(.*)$ {
            # Allow internal requests only, i.e. return a 404 to any client who
            # tries to access this location directly
            internal;
            # Name resolution won't work at all without specifying a resolver here.
            # Configuring a validity period is useful for overriding Amazon's very
            # short (5-second?) TTLs.
            resolver 8.8.8.8 8.8.4.4 valid=300s;
            resolver_timeout 10s;
            # Everything that S3 needs is in the URL; don't pass any headers or
            # body content that the client may have sent
            proxy_pass_request_body off;
            proxy_pass_request_headers off;

            # Stream the response to the client instead of trying to read it all at
            # once, which would potentially use disk space
            proxy_buffering off;

            # Don't leak S3 headers to the client. List retrieved from:
            # https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html
            proxy_hide_header x-amz-delete-marker;
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-request-id;
            proxy_hide_header x-amz-version-id;

            # S3 will complain if `$1` contains non-encoded special characters.
            # KoBoCAT must encode twice to make sure `$1` is still encoded after
            # NGINX's automatic URL decoding.
            proxy_pass $1;
        }
    }

    # kobocat
    server {
        listen 9001;

        location / {
            proxy_pass http://10.6.6.1:9011;
        }

        location /protected/ {
            # Allow internal requests only, i.e. return a 404 to any client who
            # tries to access this location directly
            internal;
            alias /mnt/kobocat/media/;
        }

        #################################################################
        # DUPLICATED VERBATIM ACROSS BOTH KPI AND KOBOCAT SERVER BLOCKS #
        # …because I am too lazy to make a separate file and include it #
        #################################################################
        location ~ ^/protected-s3/(.*)$ {
            # Allow internal requests only, i.e. return a 404 to any client who
            # tries to access this location directly
            internal;
            # Name resolution won't work at all without specifying a resolver here.
            # Configuring a validity period is useful for overriding Amazon's very
            # short (5-second?) TTLs.
            resolver 8.8.8.8 8.8.4.4 valid=300s;
            resolver_timeout 10s;
            # Everything that S3 needs is in the URL; don't pass any headers or
            # body content that the client may have sent
            proxy_pass_request_body off;
            proxy_pass_request_headers off;

            # Stream the response to the client instead of trying to read it all at
            # once, which would potentially use disk space
            proxy_buffering off;

            # Don't leak S3 headers to the client. List retrieved from:
            # https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html
            proxy_hide_header x-amz-delete-marker;
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-request-id;
            proxy_hide_header x-amz-version-id;

            # S3 will complain if `$1` contains non-encoded special characters.
            # KoBoCAT must encode twice to make sure `$1` is still encoded after
            # NGINX's automatic URL decoding.
            proxy_pass $1;
        }
    }
}
